{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,QAEtCF,EAAOG,iBAAiB,UAExB,SAAgCC,G,kBAU9B,IAAuBC,EAAUC,EAmB/BC,EAASC,IAnBYH,EAmBOG,EAnBGF,EAmBAG,EAlBxB,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,WAELH,EACFF,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,YAEpBA,OAQFW,MAAK,SAAAC,GAAWA,EAARb,S,IAAUC,EAAKY,EAALZ,MACjBa,EAAArB,GAASsB,OAAOC,QAAQ,uBAAiCC,OAARd,EAAE,QAAYc,OAANhB,EAAM,UAEhEiB,OAAM,SAAAL,GAAWA,EAARb,S,IAAUC,EAAKY,EAALZ,MAClBa,EAAArB,GAASsB,OAAOI,QAAQ,sBAAgCF,OAARd,EAAE,QAAYc,OAANhB,EAAM,UAElEG,GAASgB,GAnCXrB,EAAMsB,iBAEN,IAAIC,GAAmB3B,EAAOM,MAAMsB,MACpCC,QAAQC,IAAI,cAAeH,GAC3B,IAAIF,GAAkBzB,EAAO+B,KAAKH,MAClCC,QAAQC,IAAI,kBAAmBL,GAC/B,IAAIO,GAAehC,EAAOiC,OAAOL,MACjCC,QAAQC,IAAI,eAAgBE,GAoB5B,IAFA,IAAIzB,EAAW,GACXE,EAAQkB,EACHO,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAACC,EAAAD,MAapBjC,SAASmC,iBAAiB,SAElCC,SAAQ,SAACC,GACrBA,EAAGC,UAAUC,IAAI,sBAGDvC,SAASC,cAAc,UAC/BqC,UAAUC,IAAI,gB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport '../css/03-promises.css'\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', onPromisesButtonSubmit);\n\nfunction onPromisesButtonSubmit(event) {\n  event.preventDefault();\n\n  let delayFirstValue = +formEl.delay.value;\n  console.log('delayValue:', delayFirstValue);\n  let delayStepValue = +formEl.step.value;\n  console.log('delayStepValue:', delayStepValue);\n  let amountValue = +formEl.amount.value;\n  console.log('amountValue:', amountValue);\n   \n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;    \n      \n      setTimeout(() => {\n        \n        if (shouldResolve) {\n          resolve({ position, delay });\n            \n        } else {\n          reject({ position, delay });\n        }\n      }, delay)\n    })\n  }\n\n  let promises = [];\n  let delay = delayFirstValue;\n  for (let i = 1; i <= amountValue; i += 1) {\n    promises[i] = createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });  \n    delay += delayStepValue;\n  }\n}\n\n// додаю класи для оформлення\nconst navInputValue = document.querySelectorAll('input');\n// console.log(navInputValue);\nnavInputValue.forEach((el) => {\n  el.classList.add('backlight-frame')\n});\n\nconst navButton = document.querySelector('button');\nnavButton.classList.add('color-button')"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","position","delay","promises","i","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","delayStepValue","preventDefault","delayFirstValue","value","console","log","step","amountValue","amount","i1","_loop","querySelectorAll","forEach","el","classList","add"],"version":3,"file":"03-promises.7aa0d809.js.map"}