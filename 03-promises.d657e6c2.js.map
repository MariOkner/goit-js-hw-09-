{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,QAEtCF,EAAOG,iBAAiB,UAExB,SAAgCC,GAC9BA,EAAMC,iBAEN,IAAIC,GAAmBN,EAAOO,MAAMC,MACpCC,QAAQC,IAAI,cAAeJ,GAC3B,IAAIK,GAAkBX,EAAOY,KAAKJ,MAClCC,QAAQC,IAAI,kBAAmBC,GAC/B,IAAIE,GAAeb,EAAOc,OAAON,MAGjC,SAASO,EAAcC,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,KAELH,EACFF,EAAQ,C,SAAEF,E,MAAUT,IAGpBY,EAAO,C,SAAEH,E,MAAUT,MAEpBA,MAdPE,QAAQC,IAAI,eAAgBG,GAkB5B,IAAIW,EAAW,GACXC,EAAQnB,EACZ,IAAK,IAAIoB,EAAI,EAAGA,GAAKb,EAAaa,GAAK,EACrCF,EAASE,GAAKX,EAAcW,EAAGD,GAC5BE,MAAK,EAACX,SAAEA,EAAQT,MAAEA,MACjBqB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBJ,QAAUnB,UAExDwB,OAAM,EAACf,SAAEA,EAAQT,MAAEA,MAClBqB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBN,QAAUnB,UAE1DkB,GAASd,KAKSV,SAASgC,iBAAiB,SAElCC,SAASC,IACrBA,EAAGC,UAAUC,IAAI,sBAGDpC,SAASC,cAAc,UAC/BkC,UAAUC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport '../css/03-promises.css'\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', onPromisesButtonSubmit);\n\nfunction onPromisesButtonSubmit(event) {\n  event.preventDefault();\n\n  let delayFirstValue = +formEl.delay.value;\n  console.log('delayValue:', delayFirstValue);\n  let delayStepValue = +formEl.step.value;\n  console.log('delayStepValue:', delayStepValue);\n  let amountValue = +formEl.amount.value;\n  console.log('amountValue:', amountValue);\n   \n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;    \n      \n      setTimeout(() => {\n        \n        if (shouldResolve) {\n          resolve({ position, delay });\n            \n        } else {\n          reject({ position, delay });\n        }\n      }, delay)\n    })\n  }\n\n  let promises = [];\n  let delay = delayFirstValue;\n  for (let i = 1; i <= amountValue; i += 1) {\n    promises[i] = createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });  \n    delay += delayStepValue;\n  }\n}\n\n// додаю класи для оформлення\nconst navInputValue = document.querySelectorAll('input');\n// console.log(navInputValue);\nnavInputValue.forEach((el) => {\n  el.classList.add('backlight-frame')\n});\n\nconst navButton = document.querySelector('button');\nnavButton.classList.add('color-button')"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","event","preventDefault","delayFirstValue","delay","value","console","log","delayStepValue","step","amountValue","amount","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promises","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","querySelectorAll","forEach","el","classList","add"],"version":3,"file":"03-promises.d657e6c2.js.map"}